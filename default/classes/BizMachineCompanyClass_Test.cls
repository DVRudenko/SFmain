//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

@IsTest
public class BizMachineCompanyClass_Test {

    // This test method should give 100% coverage
    static testMethod void testParse() {
        String json = '{'+
                '    \"Status\": 200,'+
                '    \"Data\": {'+
                '        \"IsImporterOrExporter\": false,'+
                '        \"ImportantChange\": false,'+
                '        \"PersonalVehicles\": 0,'+
                '        \"Trucks\": 0,'+
                '        \"OtherVehicles\": 0,'+
                '        \"ConnectedCompaniesCount\": \"1\",'+
                '        \"Website\": \"http://intercodec.cz\",'+
                '        \"Email\": \"info@intercodec.cz\",'+
                '        \"Phone\": \"(+420) 720 575 755\",'+
                '        \"SelfDeclaredDescription\": \"Jsme konzultantská společnost zaměřená na optimalizaci a implementaci kompletních obchodních procesů a Salesforce CRM a firemní vzdělávání.\",'+
                '        \"NetProfitMargin\": {'+
                '            \"Value\": 0.08,'+
                '            \"LastReportedYear\": \"2018-01-01\"'+
                '        },'+
                '        \"Employees\": {'+
                '            \"Code\": \"3\",'+
                '            \"ValueUpperBound\": 0.0,'+
                '            \"ValueLowerBound\": 0.0'+
                '        },'+
                '        \"NACE\": {'+
                '            \"Primary\": {'+
                '                \"Code\": \"3314\",'+
                '                \"Text\": \"[3314] Repair of electrical equipment\"'+
                '            },'+
                '            \"Other\": ['+
                '                {'+
                '                    \"Code\": \"2611\",'+
                '                    \"Text\": \"[2611] Manufacture of electronic components\"'+
                '                },'+
                '                {'+
                '                    \"Code\": \"279\",'+
                '                    \"Text\": \"[279] Manufacture of other electrical equipment\"'+
                '                },'+
                '                {'+
                '                    \"Code\": \"74\",'+
                '                    \"Text\": \"[74] Other professional, scientific and technical activities\"'+
                '                }'+
                '            ]'+
                '        },'+
                '        \"MetaIndicators\": {'+
                '            \"Activity\": 71,'+
                '            \"Reachability\": 68,'+
                '            \"Growth\": 0'+
                '        },'+
                '        \"PublicMoney\": {'+
                '            \"Currency_x\": \"CZK\",'+
                '            \"Scale\": 1000000,'+
                '            \"Value\": 0.0'+
                '        },'+
                '        \"SocialNetworks\": {'+
                '            \"LinkedIn\": \"https://www.linkedin.com/company/5197295/\",'+
                '            \"Facebook\": \"https://www.facebook.com/911535265530183/\",'+
                '            \"Twitter\": \"https://www.twitter.com/intercodec/\"'+
                '        },'+
                '        \"Risks\": \"NULL\",'+
                '        \"RegisteredAddress\": {'+
                '            \"Text\": \"Chotěšovská 680/1, Praha, 19000\",'+
                '            \"Latitude\": 50.1280309607,'+
                '            \"Longitude\": 14.5021109895,'+
                '            \"NUTSCode\": \"NULL\",'+
                '            \"StreetName\": \"Chotěšovská\",'+
                '            \"StreetNumber\": \"680\",'+
                '            \"City\": \"Praha\",'+
                '            \"PostalCode\": \"19000\",'+
                '            \"AdmCode\": \"25769731\",'+
                '            \"IsEvidenceNumber\": false,'+
                '            \"HouseNumber\": \"680\",'+
                '            \"OrientationNumber\": \"1\",'+
                '            \"CountryCode\": \"CZ\",'+
                '            \"CityPart\": \"Letňany\",'+
                '            \"CityDistrict\": \"Praha 18\",'+
                '            \"Region\": \"Hlavní město Praha\",'+
                '            \"District\": \"Praha\",'+
                '            \"Lau1Code\": \"CZ0100\"'+
                '        },'+
                '        \"FileNumber\": \"C 220990\",'+
                '        \"Court\": \"Městský soud v Praze\",'+
                '        \"RegistrationNumber\": \"02582589\",'+
                '        \"Name\": \"INTERCODEC CZECH s.r.o.\",'+
                '        \"DateEstablished\": \"2014-01-27\",'+
                '        \"JusticeCzLink\": \"https://or.justice.cz/ias/ui/rejstrik-$firma?ico=02582589&jenPlatne=VSECHNY\",'+
                '        \"TaxRegistrationNumber\": \"CZ02582589\",'+
                '        \"ProspectorLink\": \"https://prospector.cz.bizmachine.com/company/02582589\",'+
                '        \"RiskIndicator\": 1,'+
                '        \"RevenueGrowth\": 0.16,'+
                '        \"RegisteredCapital\": {'+
                '            \"Value\": 200.0,'+
                '            \"Currency_x\": \"CZK\",'+
                '            \"Scale\": 1000'+
                '        },'+
                '        \"LegalForm\": {'+
                '            \"ID\": 112,'+
                '            \"Text\": \"Limited liability company\"'+
                '        },'+
                '        \"Revenue\": {'+
                '            \"Currency_x\": \"CZK\",'+
                '            \"Scale\": 1000000,'+
                '            \"LastReportedYear\": \"2018-01-01\",'+
                '            \"ValueUpperBound\": 2.9,'+
                '            \"ValueLowerBound\": 1.0'+
                '        },'+
                '        \"Owners\": ['+
                '            {'+
                '                \"Name\": \"Štěpán Víteček\",'+
                '                \"DateOfBirth\": \"17.01.1998 0:00:00\",'+
                '                \"RegistrationNumber\": \"STRING\",'+
                '                \"Address\": {'+
                '                    \"Text\": \"Chlumeček 9, Křemže, 38203\",'+
                '                    \"Latitude\": 0.0,'+
                '                    \"Longitude\": 0.0,'+
                '                    \"NUTSCode\": \"NULL\",'+
                '                    \"StreetName\": \"NULL\",'+
                '                    \"StreetNumber\": \"9\",'+
                '                    \"City\": \"Křemže\",'+
                '                    \"PostalCode\": \"38203\",'+
                '                    \"AdmCode\": \"NULL\",'+
                '                    \"IsEvidenceNumber\": false,'+
                '                    \"HouseNumber\": \"NULL\",'+
                '                    \"OrientationNumber\": \"NULL\",'+
                '                    \"CountryCode\": \"NULL\",'+
                '                    \"CityPart\": \"NULL\",'+
                '                    \"CityDistrict\": \"NULL\",'+
                '                    \"Region\": \"NULL\",'+
                '                    \"District\": \"NULL\",'+
                '                    \"Lau1Code\": \"NULL\"'+
                '                },'+
                '                \"Share\": 0.8'+
                '            },'+
                '            {'+
                '                \"Name\": \"Bedřich Víteček\",'+
                '                \"DateOfBirth\": \"01.09.1972 0:00:00\",'+
                '                \"RegistrationNumber\": \"NULL\",'+
                '                \"Address\": {'+
                '                    \"Text\": \"Chlumeček 9, Křemže, 38203\",'+
                '                    \"Latitude\": 0.0,'+
                '                    \"Longitude\": 0.0,'+
                '                    \"NUTSCode\": \"NULL\",'+
                '                    \"StreetName\": \"NULL\",'+
                '                    \"StreetNumber\": \"9\",'+
                '                    \"City\": \"Křemže\",'+
                '                    \"PostalCode\": \"38203\",'+
                '                    \"AdmCode\": \"NULL\",'+
                '                    \"IsEvidenceNumber\": false,'+
                '                    \"HouseNumber\": \"NULL\",'+
                '                    \"OrientationNumber\": \"NULL\",'+
                '                    \"CountryCode\": \"NULL\",'+
                '                    \"CityPart\": \"NULL\",'+
                '                    \"CityDistrict\": \"NULL\",'+
                '                    \"Region\": \"NULL\",'+
                '                    \"District\": \"NULL\",'+
                '                    \"Lau1Code\": \"NULL\"'+
                '                },'+
                '                \"Share\": 0.2'+
                '            }'+
                '        ],'+
                '        \"StatutoryReps\": ['+
                '            {'+
                '                \"Name\": \"Štěpán Víteček\",'+
                '                \"DateOfBirth\": \"17.01.1998 0:00:00\",'+
                '                \"Address\": {'+
                '                    \"Text\": \"Chlumeček 9, Křemže, 38203\",'+
                '                    \"Latitude\": 0.0,'+
                '                    \"Longitude\": 0.0,'+
                '                    \"NUTSCode\": \"NULL\",'+
                '                    \"StreetName\": \"NULL\",'+
                '                    \"StreetNumber\": \"9\",'+
                '                    \"City\": \"Křemže\",'+
                '                    \"PostalCode\": \"38203\",'+
                '                    \"AdmCode\": \"NULL\",'+
                '                    \"IsEvidenceNumber\": false,'+
                '                    \"HouseNumber\": \"NULL\",'+
                '                    \"OrientationNumber\": \"NULL\",'+
                '                    \"CountryCode\": \"NULL\",'+
                '                    \"CityPart\": \"NULL\",'+
                '                    \"CityDistrict\": \"NULL\",'+
                '                    \"Region\": \"NULL\",'+
                '                    \"District\": \"NULL\",'+
                '                    \"Lau1Code\": \"NULL\"'+
                '                },'+
                '                \"Role\": \"jednatel\"'+
                '            },'+
                '            {'+
                '                \"Name\": \"Bedřich Víteček\",'+
                '                \"DateOfBirth\": \"01.09.1972 0:00:00\",'+
                '                \"Address\": {'+
                '                    \"Text\": \"Chlumeček 9, Křemže, 38203\",'+
                '                    \"Latitude\": 0.0,'+
                '                    \"Longitude\": 0.0,'+
                '                    \"NUTSCode\": \"NULL\",'+
                '                    \"StreetName\": \"NULL\",'+
                '                    \"StreetNumber\": \"9\",'+
                '                    \"City\": \"Křemže\",'+
                '                    \"PostalCode\": \"38203\",'+
                '                    \"AdmCode\": \"NULL\",'+
                '                    \"IsEvidenceNumber\": false,'+
                '                    \"HouseNumber\": \"NULL\",'+
                '                    \"OrientationNumber\": \"NULL\",'+
                '                    \"CountryCode\": \"NULL\",'+
                '                    \"CityPart\": \"NULL\",'+
                '                    \"CityDistrict\": \"NULL\",'+
                '                    \"Region\": \"NULL\",'+
                '                    \"District\": \"NULL\",'+
                '                    \"Lau1Code\": \"NULL\"'+
                '                },'+
                '                \"Role\": \"jednatel\"'+
                '            }'+
                '        ]'+
                '    },'+
                '    \"Meta\": {'+
                '        \"DataType\": \"object\",'+
                '        \"Dataset\": \"CZ\",'+
                '        \"CurrentNumberOfAPICallsPerMinute\": 2,'+
                '        \"RemainingNumberOfAPICallsPerMinute\": 8,'+
                '        \"CurrentNumberOfAPICallsPerDay\": 2,'+
                '        \"RemainingNumberOfAPICallsPerDay\": 98,'+
                '        \"APIKeyExpiresAt\": \"2021-01-01T00:00:00\"'+
                '    }'+
                '}';
        BizMachineCompanyClass r = BizMachineCompanyClass.parse(json);
        System.assert(r != null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        BizMachineCompanyClass.Meta objMeta = new BizMachineCompanyClass.Meta(System.JSON.createParser(json));
        System.assert(objMeta != null);
        System.assert(objMeta.DataType == null);
        System.assert(objMeta.Dataset == null);
        System.assert(objMeta.CurrentNumberOfAPICallsPerMinute == null);
        System.assert(objMeta.RemainingNumberOfAPICallsPerMinute == null);
        System.assert(objMeta.CurrentNumberOfAPICallsPerDay == null);
        System.assert(objMeta.RemainingNumberOfAPICallsPerDay == null);
        System.assert(objMeta.APIKeyExpiresAt == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        BizMachineCompanyClass.Employees objEmployees = new BizMachineCompanyClass.Employees(System.JSON.createParser(json));
        System.assert(objEmployees != null);
        System.assert(objEmployees.Code == null);
        System.assert(objEmployees.ValueUpperBound == null);
        System.assert(objEmployees.ValueLowerBound == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        BizMachineCompanyClass objBizMachineCompanyClass = new BizMachineCompanyClass(System.JSON.createParser(json));
        System.assert(objBizMachineCompanyClass != null);
        System.assert(objBizMachineCompanyClass.Status == null);
        System.assert(objBizMachineCompanyClass.Data == null);
        System.assert(objBizMachineCompanyClass.Meta == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        BizMachineCompanyClass.Data objData = new BizMachineCompanyClass.Data(System.JSON.createParser(json));
        System.assert(objData != null);
        System.assert(objData.IsImporterOrExporter == null);
        System.assert(objData.ImportantChange == null);
        System.assert(objData.PersonalVehicles == null);
        System.assert(objData.Trucks == null);
        System.assert(objData.OtherVehicles == null);
        System.assert(objData.ConnectedCompaniesCount == null);
        System.assert(objData.Website == null);
        System.assert(objData.Email == null);
        System.assert(objData.Phone == null);
        System.assert(objData.SelfDeclaredDescription == null);
        System.assert(objData.NetProfitMargin == null);
        System.assert(objData.Employees == null);
        System.assert(objData.NACE == null);
        System.assert(objData.MetaIndicators == null);
        System.assert(objData.PublicMoney == null);
        System.assert(objData.SocialNetworks == null);
        //System.assert(objData.Risks == null);
        System.assert(objData.RegisteredAddress == null);
        System.assert(objData.FileNumber == null);
        System.assert(objData.Court == null);
        System.assert(objData.RegistrationNumber == null);
        System.assert(objData.Name == null);
        System.assert(objData.DateEstablished == null);
        System.assert(objData.JusticeCzLink == null);
        System.assert(objData.TaxRegistrationNumber == null);
        System.assert(objData.ProspectorLink == null);
        System.assert(objData.RiskIndicator == null);
        System.assert(objData.RevenueGrowth == null);
        System.assert(objData.RegisteredCapital == null);
        System.assert(objData.LegalForm == null);
        System.assert(objData.Revenue == null);
        System.assert(objData.Owners == null);
        System.assert(objData.StatutoryReps == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        BizMachineCompanyClass.MetaIndicators objMetaIndicators = new BizMachineCompanyClass.MetaIndicators(System.JSON.createParser(json));
        System.assert(objMetaIndicators != null);
        System.assert(objMetaIndicators.Activity == null);
        System.assert(objMetaIndicators.Reachability == null);
        System.assert(objMetaIndicators.Growth == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        BizMachineCompanyClass.Owners objOwners = new BizMachineCompanyClass.Owners(System.JSON.createParser(json));
        System.assert(objOwners != null);
        System.assert(objOwners.Name == null);
        System.assert(objOwners.DateOfBirth == null);
        System.assert(objOwners.RegistrationNumber == null);
        System.assert(objOwners.Address == null);
        System.assert(objOwners.Share == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        BizMachineCompanyClass.NACE objNACE = new BizMachineCompanyClass.NACE(System.JSON.createParser(json));
        System.assert(objNACE != null);
        System.assert(objNACE.Primary == null);
        System.assert(objNACE.Other == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        BizMachineCompanyClass.RegisteredAddress objRegisteredAddress = new BizMachineCompanyClass.RegisteredAddress(System.JSON.createParser(json));
        System.assert(objRegisteredAddress != null);
        System.assert(objRegisteredAddress.Text == null);
        System.assert(objRegisteredAddress.Latitude == null);
        System.assert(objRegisteredAddress.Longitude == null);
        System.assert(objRegisteredAddress.NUTSCode == null);
        System.assert(objRegisteredAddress.StreetName == null);
        System.assert(objRegisteredAddress.StreetNumber == null);
        System.assert(objRegisteredAddress.City == null);
        System.assert(objRegisteredAddress.PostalCode == null);
        System.assert(objRegisteredAddress.AdmCode == null);
        System.assert(objRegisteredAddress.IsEvidenceNumber == null);
        System.assert(objRegisteredAddress.HouseNumber == null);
        System.assert(objRegisteredAddress.OrientationNumber == null);
        System.assert(objRegisteredAddress.CountryCode == null);
        System.assert(objRegisteredAddress.CityPart == null);
        System.assert(objRegisteredAddress.CityDistrict == null);
        System.assert(objRegisteredAddress.Region == null);
        System.assert(objRegisteredAddress.District == null);
        System.assert(objRegisteredAddress.Lau1Code == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        BizMachineCompanyClass.Primary objPrimary = new BizMachineCompanyClass.Primary(System.JSON.createParser(json));
        System.assert(objPrimary != null);
        System.assert(objPrimary.Code == null);
        System.assert(objPrimary.Text == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        BizMachineCompanyClass.Revenue objRevenue = new BizMachineCompanyClass.Revenue(System.JSON.createParser(json));
        System.assert(objRevenue != null);
        System.assert(objRevenue.Currency_x == null);
        System.assert(objRevenue.Scale == null);
        System.assert(objRevenue.LastReportedYear == null);
        System.assert(objRevenue.ValueUpperBound == null);
        System.assert(objRevenue.ValueLowerBound == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        BizMachineCompanyClass.SocialNetworks objSocialNetworks = new BizMachineCompanyClass.SocialNetworks(System.JSON.createParser(json));
        System.assert(objSocialNetworks != null);
        System.assert(objSocialNetworks.LinkedIn == null);
        System.assert(objSocialNetworks.Facebook == null);
        System.assert(objSocialNetworks.Twitter == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        BizMachineCompanyClass.StatutoryReps objStatutoryReps = new BizMachineCompanyClass.StatutoryReps(System.JSON.createParser(json));
        System.assert(objStatutoryReps != null);
        System.assert(objStatutoryReps.Name == null);
        System.assert(objStatutoryReps.DateOfBirth == null);
        System.assert(objStatutoryReps.Address == null);
        System.assert(objStatutoryReps.Role == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        BizMachineCompanyClass.NetProfitMargin objNetProfitMargin = new BizMachineCompanyClass.NetProfitMargin(System.JSON.createParser(json));
        System.assert(objNetProfitMargin != null);
        System.assert(objNetProfitMargin.Value == null);
        System.assert(objNetProfitMargin.LastReportedYear == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        BizMachineCompanyClass.PublicMoney objPublicMoney = new BizMachineCompanyClass.PublicMoney(System.JSON.createParser(json));
        System.assert(objPublicMoney != null);
        System.assert(objPublicMoney.Currency_x == null);
        System.assert(objPublicMoney.Scale == null);
        System.assert(objPublicMoney.Value == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        BizMachineCompanyClass.LegalForm objLegalForm = new BizMachineCompanyClass.LegalForm(System.JSON.createParser(json));
        System.assert(objLegalForm != null);
        System.assert(objLegalForm.ID == null);
        System.assert(objLegalForm.Text == null);
    }
}