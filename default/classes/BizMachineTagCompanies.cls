/**
 * Created by marekhaken on 26/08/2020.
 */

//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class BizMachineTagCompanies {

    public class Company {
        public String bid {get;set;}

        public Company(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'bid') {
                            bid = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Company consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }

    public List<Data> data {get;set;}

    public BizMachineTagCompanies(JSONParser parser) {
        while (parser.nextToken() != System.JSONToken.END_OBJECT) {
            if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                String text = parser.getText();
                if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                    if (text == 'data') {
                        data = arrayOfData(parser);
                    } else {
                        System.debug(LoggingLevel.WARN, 'BizMachineTagCompanies consuming unrecognized property: '+text);
                        consumeObject(parser);
                    }
                }
            }
        }
    }

    public class CreatedBy {
        public String uid {get;set;}

        public CreatedBy(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'uid') {
                            uid = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'CreatedBy consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }

    public class Data {
        public Company company {get;set;}
        public String createdAt {get;set;}
        public CreatedBy createdBy {get;set;}
        public String description {get;set;}

        public Data(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'company') {
                            company = new Company(parser);
                        } else if (text == 'createdAt') {
                            createdAt = parser.getText();
                        } else if (text == 'createdBy') {
                            createdBy = new CreatedBy(parser);
                        } else if (text == 'description') {
                            description = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }

    public static BizMachineTagCompanies parse(String json) {
        System.JSONParser parser = System.JSON.createParser(json);
        return new BizMachineTagCompanies(parser);
    }

    public static void consumeObject(System.JSONParser parser) {
        Integer depth = 0;
        do {
            System.JSONToken curr = parser.getCurrentToken();
            if (curr == System.JSONToken.START_OBJECT ||
                    curr == System.JSONToken.START_ARRAY) {
                depth++;
            } else if (curr == System.JSONToken.END_OBJECT ||
                    curr == System.JSONToken.END_ARRAY) {
                depth--;
            }
        } while (depth > 0 && parser.nextToken() != null);
    }

    private static List<Data> arrayOfData(System.JSONParser p) {
        List<Data> res = new List<Data>();
        Integer numberToEnd = 0;
        if (p.getCurrentToken() == null) p.nextToken();
        //while (p.nextToken() != System.JSONToken.END_ARRAY) {
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            if(numberToEnd < 4000){
                res.add(new Data(p));
                numberToEnd++;
            }else{
                return res;
            }
        }
        return res;
    }

}