@isTest
public class AccountDetailsGfnTest {
    @isTest
    static void test() {
        AccountDetailsGfn accountDetails = new AccountDetailsGfn();
        System.assert(accountDetails != null);
        System.assert(accountDetails.Data == null);

        AccountDetailsGfn.Data data = new AccountDetailsGfn.Data();
        System.assert(data != null);
        System.assert(data.CustomerID == null);
        System.assert(data.FullName == null);
        System.assert(data.CustomerERP == null);
        System.assert(data.ClientCustomerNumber == null);
        System.assert(data.MarketingSegmentation == null);
        System.assert(data.StatusID == null);
        System.assert(data.Status == null);
        System.assert(data.Language == null);
        System.assert(data.RegistrationNumber == null);
        System.assert(data.VATRegistrationNumber == null);
        System.assert(data.AverageVolume == null);
        System.assert(data.DebtorStatus == null);
        System.assert(data.OutstandingDebt == null);
        System.assert(data.OutstandDebtCurrency == null);
        System.assert(data.CreditLimit == null);
        System.assert(data.CreditLimitCurrency == null);
        System.assert(data.PaymentMethod == null);
        System.assert(data.PaymentTerms == null);
        System.assert(data.Guarantee == null);
        System.assert(data.GuarenteeCurrency == null);
        System.assert(data.BillingFrequency == null);
        System.assert(data.DefaultDistributionMethod == null);
        System.assert(data.DefaultDistributionFormat == null);
        System.assert(data.RelatedAccounts == null);
        System.assert(data.AllowedStatusChanges == null);
        System.assert(data.AccountAddresses == null);
        System.assert(data.AccountContacts == null);
        System.assert(data.AccountServices == null);
        System.assert(data.AccountSelfServeUsers == null);
        System.assert(data.SalesforceCards == null);
        System.assert(data.UnbilledProducts == null);
        System.assert(data.UnbilledTransactions == null);
        System.assert(data.FeeRules == null);
        System.assert(data.AccountPriceRules == null);
        System.assert(data.HomeSites == null);
        System.assert(data.PdfData == null);
        System.assert(data.DocumentNumber == null);
        System.assert(data.AccountBillingDocuments == null);
        System.assert(data.InfoSubscriptions == null);
        System.assert(data.InvoiceCustomerID == null);
        System.assert(data.InvoiceCustomerERP == null);
        System.assert(data.InvoiceCustomerFullName == null);
        System.assert(data.InvoiceCustomer == null);
        System.assert(data.PaymentCustomerID == null);
        System.assert(data.PaymentCustomerERP == null);
        System.assert(data.PaymentCustomerFullName == null);
        System.assert(data.PaymentCustomer == null);
        System.assert(data.TopLevelCustomerID == null);
        System.assert(data.TopLevelCustomerERP == null);
        System.assert(data.TopLevelCustomerFullName == null);
        System.assert(data.TopLevelCustomer == null);
        System.assert(data.SalesforceSearchByCards == null);

        AccountDetailsGfn.RelatedAccount relatedAccount = new AccountDetailsGfn.RelatedAccount();
        System.assert(relatedAccount != null);
        System.assert(relatedAccount.CustomerID == null);
        System.assert(relatedAccount.ClientCustomerNumber == null);
        System.assert(relatedAccount.CustomerERP == null);
        System.assert(relatedAccount.ShortName == null);
        System.assert(relatedAccount.Fullname == null);
        System.assert(relatedAccount.StatusID == null);
        System.assert(relatedAccount.Status == null);
        System.assert(relatedAccount.Parent == null);
        System.assert(relatedAccount.Child == null);
        System.assert(relatedAccount.City == null);
        System.assert(relatedAccount.CustomerLink == null);

        AccountDetailsGfn.AllowedStatusChanges allowedStatusChanges = new AccountDetailsGfn.AllowedStatusChanges();
        System.assert(allowedStatusChanges != null);
        System.assert(allowedStatusChanges.Status == null);
        System.assert(allowedStatusChanges.StatusChange == null);

        AccountDetailsGfn.AccountAddress accountAddress = new AccountDetailsGfn.AccountAddress();
        System.assert(accountAddress != null);
        System.assert(accountAddress.CustomerID == null);
        System.assert(accountAddress.AddressID == null);
        System.assert(accountAddress.AddressLines == null);
        System.assert(accountAddress.Region == null);
        System.assert(accountAddress.ZipCode == null);
        System.assert(accountAddress.City == null);
        System.assert(accountAddress.Country == null);
        System.assert(accountAddress.Telephone == null);
        System.assert(accountAddress.Fax == null);
        System.assert(accountAddress.AddressTypes == null);

        AccountDetailsGfn.AccountContact accountContact = new AccountDetailsGfn.AccountContact();
        System.assert(accountContact != null);
        System.assert(accountContact.CustomerID == null);
        System.assert(accountContact.ContactID == null);
        System.assert(accountContact.IsPrimary == null);
        System.assert(accountContact.IsActive == null);
        System.assert(accountContact.ContactTitleID == null);
        System.assert(accountContact.ContactTitle == null);
        System.assert(accountContact.LanguageID == null);
        System.assert(accountContact.LanguageCode == null);
        System.assert(accountContact.Language == null);
        System.assert(accountContact.SalutationWritten == null);
        System.assert(accountContact.SalutationVerbal == null);
        System.assert(accountContact.ForeName == null);
        System.assert(accountContact.MiddleName == null);
        System.assert(accountContact.LastName == null);
        System.assert(accountContact.Telephone == null);
        System.assert(accountContact.Fax == null);
        System.assert(accountContact.MobilePhone == null);
        System.assert(accountContact.EmailAddress == null);
        System.assert(accountContact.MarketingCampaigns == null);
        System.assert(accountContact.Position == null);
        System.assert(accountContact.ContactTypes == null);

        AccountDetailsGfn.AccountServices accountServices = new AccountDetailsGfn.AccountServices();
        System.assert(accountServices != null);
        System.assert(accountServices.ServiceID == null);
        System.assert(accountServices.ServiceDescription == null);
        System.assert(accountServices.ServiceTypeID == null);
        System.assert(accountServices.ServiceType == null);
        System.assert(accountServices.Essential == null);
        System.assert(accountServices.QuotaRequired == null);
        System.assert(accountServices.MaxQuota == null);
        System.assert(accountServices.RegistrationNumber == null);
        System.assert(accountServices.StartDate == null);
        System.assert(accountServices.Registered == null);
        System.assert(accountServices.Quota == null);

        AccountDetailsGfn.AddressType addressType = new AccountDetailsGfn.AddressType();
        System.assert(addressType != null);
        System.assert(addressType.AddressTypeID == null);
        System.assert(addressType.AddressType == null);

        AccountDetailsGfn.ContactTypes contactTypes = new AccountDetailsGfn.ContactTypes();
        System.assert(contactTypes != null);
        System.assert(contactTypes.ContactID == null);
        System.assert(contactTypes.ContactTypeID == null);
        System.assert(contactTypes.ContactType == null);

        AccountDetailsGfn.CustomerLink customerLink = new AccountDetailsGfn.CustomerLink();
        System.assert(customerLink != null);
        System.assert(customerLink.Description == null);
        System.assert(customerLink.Method == null);
        System.assert(customerLink.Link == null);

        AccountDetailsGfn.AccountSelfServeUsers accountSelfServeUsers = new AccountDetailsGfn.AccountSelfServeUsers();
        System.assert(accountSelfServeUsers != null);
        System.assert(accountSelfServeUsers.UserID == null);
        System.assert(accountSelfServeUsers.LoginName == null);
        System.assert(accountSelfServeUsers.Title == null);
        System.assert(accountSelfServeUsers.FirstName == null);
        System.assert(accountSelfServeUsers.LastName == null);
        System.assert(accountSelfServeUsers.TelephoneNumber == null);
        System.assert(accountSelfServeUsers.EmailAddress == null);
        System.assert(accountSelfServeUsers.CultureID == null);
        System.assert(accountSelfServeUsers.Culture == null);
        System.assert(accountSelfServeUsers.LastLogin == null);
        System.assert(accountSelfServeUsers.LastActivity == null);
        System.assert(accountSelfServeUsers.LoginAttempts == null);
        System.assert(accountSelfServeUsers.LockoutTime == null);
        System.assert(accountSelfServeUsers.LockExpiry == null);
        System.assert(accountSelfServeUsers.CreatedDate == null);
        System.assert(accountSelfServeUsers.isLocked == null);
        System.assert(accountSelfServeUsers.OptOutOfEMail == null);
        System.assert(accountSelfServeUsers.ContactID == null);
        System.assert(accountSelfServeUsers.UserTypeID == null);
        System.assert(accountSelfServeUsers.UserType == null);
        System.assert(accountSelfServeUsers.isActive == null);
        System.assert(accountSelfServeUsers.UITypeID == null);
        System.assert(accountSelfServeUsers.UIType == null);

        AccountDetailsGfn.SalesforceCards salesforceCards = new AccountDetailsGfn.SalesforceCards();
        System.assert(salesforceCards != null);
        System.assert(salesforceCards.PurchaseCategory == null);
        System.assert(salesforceCards.PurchaseCategoryID == null);
        System.assert(salesforceCards.EffectiveDate == null);
        System.assert(salesforceCards.IsDriverNameEmbossed == null);
        System.assert(salesforceCards.CardGroup == null);
        System.assert(salesforceCards.DriverName == null);
        System.assert(salesforceCards.IsOdometerPromptRequired == null);
        System.assert(salesforceCards.IsRegNumberEmbossed == null);
        System.assert(salesforceCards.RegNumber == null);
        System.assert(salesforceCards.Status == null);
        System.assert(salesforceCards.LastStatusChange == null);
        System.assert(salesforceCards.StatusID == null);
        System.assert(salesforceCards.IssueNumber == null);
        System.assert(salesforceCards.ExpiryDate == null);
        System.assert(salesforceCards.CardTypeID == null);
        System.assert(salesforceCards.PAN == null);
        System.assert(salesforceCards.CardType == null);
        System.assert(salesforceCards.CardID == null);

        AccountDetailsGfn.UnbilledProducts unbilledProducts = new AccountDetailsGfn.UnbilledProducts();
        System.assert(unbilledProducts != null);
        System.assert(unbilledProducts.Occurances == null);
        System.assert(unbilledProducts.Product == null);
        System.assert(unbilledProducts.ProductID == null);

        AccountDetailsGfn.UnbilledTransactions unbilledTransactions = new AccountDetailsGfn.UnbilledTransactions();
        System.assert(unbilledTransactions != null);
        System.assert(unbilledTransactions.AmountGross == null);
        System.assert(unbilledTransactions.AmountNet == null);
        System.assert(unbilledTransactions.Quantity == null);
        System.assert(unbilledTransactions.AmountVat == null);
        System.assert(unbilledTransactions.Product == null);
        System.assert(unbilledTransactions.ProductID == null);
        System.assert(unbilledTransactions.DriverName == null);
        System.assert(unbilledTransactions.VRN == null);
        System.assert(unbilledTransactions.SiteCountry == null);
        System.assert(unbilledTransactions.SiteID == null);
        System.assert(unbilledTransactions.Card == null);
        System.assert(unbilledTransactions.SiteLocation == null);
        System.assert(unbilledTransactions.SalesDateTime == null);
        System.assert(unbilledTransactions.SiteNumber == null);
        System.assert(unbilledTransactions.SalesItemID == null);

        AccountDetailsGfn.InfoSubscriptions infoSubscriptions = new AccountDetailsGfn.InfoSubscriptions();
        System.assert(infoSubscriptions != null);
        System.assert(infoSubscriptions.InfoSubscriptionDetails == null);
        System.assert(infoSubscriptions.FrequencyType == null);

        AccountDetailsGfn.InfoSubscriptionDetails infoSubscriptionDetails = new AccountDetailsGfn.InfoSubscriptionDetails();
        System.assert(infoSubscriptionDetails != null);
        System.assert(infoSubscriptionDetails.DistributionMethod == null);
        System.assert(infoSubscriptionDetails.OutputType == null);
        System.assert(infoSubscriptionDetails.AccountInfoSubscriptionContacts == null);

        AccountDetailsGfn.AccountInfoSubscriptionContacts accountInfoSubscriptionContacts= new AccountDetailsGfn.AccountInfoSubscriptionContacts();
        System.assert(accountInfoSubscriptionContacts != null);
        System.assert(accountInfoSubscriptionContacts.EMailAddress == null);
        System.assert(accountInfoSubscriptionContacts.isPrimary == null);
        
        AccountDetailsGfn.FeeRules accountFeeRules= new AccountDetailsGfn.FeeRules();
        System.assert(accountFeeRules != null);
        System.assert(accountFeeRules.CurrencyID == null);
        System.assert(accountFeeRules.Product == null);
        System.assert(accountFeeRules.FeeRuleBasisID == null);
        System.assert(accountFeeRules.ProductID == null);
        System.assert(accountFeeRules.FeeRuleBasis == null);
        System.assert(accountFeeRules.FrequencyType == null);
        System.assert(accountFeeRules.MinValue == null);
        System.assert(accountFeeRules.FrequencyTypeID == null);
        System.assert(accountFeeRules.MaxValue == null);
        System.assert(accountFeeRules.FeeType == null);
        System.assert(accountFeeRules.FeeCurrency == null);
        System.assert(accountFeeRules.FeeTypeID == null);
        System.assert(accountFeeRules.FeeTiers == null);
        System.assert(accountFeeRules.FeeRuleDescription == null);
        System.assert(accountFeeRules.FeeRuleID == null);
        System.assert(accountFeeRules.DateEffective == null);
        System.assert(accountFeeRules.DateTerminated == null);

        AccountDetailsGfn.FeeTiers accountFeeTiers = new AccountDetailsGfn.FeeTiers();
        System.assert(accountFeeTiers != null);
        System.assert(accountFeeTiers.DateTerminated == null);
        System.assert(accountFeeTiers.TierMax == null);
        System.assert(accountFeeTiers.Value == null);
        System.assert(accountFeeTiers.TierMin == null);
        System.assert(accountFeeTiers.BaseValue == null);
        System.assert(accountFeeTiers.DateEffective == null);
        System.assert(accountFeeTiers.UpliftValue == null);
        System.assert(accountFeeTiers.FeeRuleTierID == null);
        System.assert(accountFeeTiers.AllowEditUplift == null);
        System.assert(accountFeeTiers.FeeRuleID == null);
        
        AccountDetailsGfn.AccountPriceRules accountPriceRules = new AccountDetailsGfn.AccountPriceRules();
        System.assert(accountPriceRules != null);
        System.assert(accountPriceRules.PriceListPrice == null);
        System.assert(accountPriceRules.PriceCurrency == null);
        System.assert(accountPriceRules.PriceRuleCategoryID == null);
        System.assert(accountPriceRules.CurrencyID == null);
        System.assert(accountPriceRules.PriceRuleCategory == null);
        System.assert(accountPriceRules.PriceRuleBasis == null);
        System.assert(accountPriceRules.FunderTypeID == null);
        System.assert(accountPriceRules.PriceRuleBasisID == null);
        System.assert(accountPriceRules.FunderType == null);
        System.assert(accountPriceRules.ReferencePrice == null);
        System.assert(accountPriceRules.PriceListID == null);
        System.assert(accountPriceRules.ReferencePriceID == null);
        System.assert(accountPriceRules.PriceRuleLocations == null);
        System.assert(accountPriceRules.DateTerminated == null);
        System.assert(accountPriceRules.PriceRuleProducts == null);
        System.assert(accountPriceRules.DateEffective == null);
        System.assert(accountPriceRules.PriceRuleCards == null);
        System.assert(accountPriceRules.PriceRuleDescription == null);
        System.assert(accountPriceRules.PriceRuleTiers == null);
        System.assert(accountPriceRules.PriceRuleID == null);

        AccountDetailsGfn.PriceRuleTiers accountPriceRulesTiers = new AccountDetailsGfn.PriceRuleTiers();
        System.assert(accountPriceRulesTiers != null);
        System.assert(accountPriceRulesTiers.TierMaxExclusive == null);
        System.assert(accountPriceRulesTiers.DateEffective == null);
        System.assert(accountPriceRulesTiers.TierMin == null);
        System.assert(accountPriceRulesTiers.DateTerminated == null);
        System.assert(accountPriceRulesTiers.PriceRuleTierID == null);
        System.assert(accountPriceRulesTiers.Value == null);
        System.assert(accountPriceRulesTiers.PriceRuleID == null);

        AccountDetailsGfn.PriceRuleProducts accountPriceRulesProducts = new AccountDetailsGfn.PriceRuleProducts();
        System.assert(accountPriceRulesProducts != null);
        System.assert(accountPriceRulesProducts.DateTerminated == null);
        System.assert(accountPriceRulesProducts.ProductGroup == null);
        System.assert(accountPriceRulesProducts.ProductID == null);
        System.assert(accountPriceRulesProducts.ProductGroupID == null);
        System.assert(accountPriceRulesProducts.Product == null);
        System.assert(accountPriceRulesProducts.PriceRuleID == null);
        System.assert(accountPriceRulesProducts.DateEffective == null);
        System.assert(accountPriceRulesProducts.PriceRuleProductID == null);

        AccountDetailsGfn.PriceRuleLocations accountPriceRulesLocations = new AccountDetailsGfn.PriceRuleLocations();
        System.assert(accountPriceRulesLocations != null);
        System.assert(accountPriceRulesLocations.DateTerminated == null);
        System.assert(accountPriceRulesLocations.FuelNetworkFullName == null);
        System.assert(accountPriceRulesLocations.FuelNetworkShortName == null);
        System.assert(accountPriceRulesLocations.FuelNetworkID == null);
        System.assert(accountPriceRulesLocations.SiteGroupID == null);
        System.assert(accountPriceRulesLocations.CompanyName == null);
        System.assert(accountPriceRulesLocations.SiteGroupName == null);
        System.assert(accountPriceRulesLocations.DelcoID == null);
        System.assert(accountPriceRulesLocations.SiteID == null);
        System.assert(accountPriceRulesLocations.PriceRuleID == null);
        System.assert(accountPriceRulesLocations.SiteFullName == null);
        System.assert(accountPriceRulesLocations.PriceRuleLocationID == null);
        System.assert(accountPriceRulesLocations.SiteShortName == null);
        System.assert(accountPriceRulesLocations.DateEffective == null);

        AccountDetailsGfn.PriceRuleCards accountPriceCards = new AccountDetailsGfn.PriceRuleCards();
        System.assert(accountPriceCards != null);
        System.assert(accountPriceCards.CardType == null);
        System.assert(accountPriceCards.CardTypeID == null);
        System.assert(accountPriceCards.DateEffective == null);
        System.assert(accountPriceCards.CardTypeGroupID == null);
        System.assert(accountPriceCards.DateTerminated == null);
        System.assert(accountPriceCards.PriceRuleID == null);

        AccountDetailsGfn.HomeSites accountHomeSites = new AccountDetailsGfn.HomeSites();
        System.assert(accountHomeSites != null);
        System.assert(accountHomeSites.Longitude == null);
        System.assert(accountHomeSites.Latitude == null);
        System.assert(accountHomeSites.AddressLines == null);
        System.assert(accountHomeSites.ShortName == null);
        System.assert(accountHomeSites.City == null);
        System.assert(accountHomeSites.FullName == null);
        System.assert(accountHomeSites.RegionID == null);
        System.assert(accountHomeSites.SiteCode == null);
        System.assert(accountHomeSites.Region == null);
        System.assert(accountHomeSites.DateTerminated == null);
        System.assert(accountHomeSites.CountryID == null);
        System.assert(accountHomeSites.DateEffective == null);
        System.assert(accountHomeSites.ZipCode == null);
        System.assert(accountHomeSites.SiteID == null);
        System.assert(accountHomeSites.CustomerHomeSiteID == null);

        AccountDetailsGfn.AccountBillingDocuments accountBillingDocuments = new AccountDetailsGfn.AccountBillingDocuments();
        System.assert(accountBillingDocuments != null);
        System.assert(accountBillingDocuments.DocumentTypeID == null);
        System.assert(accountBillingDocuments.DocumentType == null);
        System.assert(accountBillingDocuments.AmountAllocated == null);
        System.assert(accountBillingDocuments.DelcoID == null);
        System.assert(accountBillingDocuments.TotalGross == null);
        System.assert(accountBillingDocuments.Delco == null);
        System.assert(accountBillingDocuments.PaymentDueDate == null);
        System.assert(accountBillingDocuments.DelcoClientCompanyNumber == null);
        System.assert(accountBillingDocuments.DocumentDate == null);
        System.assert(accountBillingDocuments.BillingOrSummary == null);
        System.assert(accountBillingDocuments.DocumentNumber == null);
        System.assert(accountBillingDocuments.InvoicePdfLink == null);
        System.assert(accountBillingDocuments.DocumentID == null);
        System.assert(accountBillingDocuments.GFNCurrency == null);

        AccountDetailsGfn.SalesforceSearchByCards searchByCardResult = new AccountDetailsGfn.SalesforceSearchByCards();
        System.assert(searchByCardResult!=null);
        System.assert(searchByCardResult.CustomerERP==null);
        System.assert(searchByCardResult.ColCoID==null);
 
    }
}